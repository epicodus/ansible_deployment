---
- name: check if homebrew is installed
  stat: path=/usr/local/bin/brew
  register: homebrew_installed

- name: install homebrew
  shell: curl -L https://github.com/Homebrew/homebrew/tarball/master | tar xz --strip 1 -C /usr/local
  become: yes
  when: homebrew_installed.stat.exists == false

- name: set epicodus permission for /usr/local
  file: path=/usr/local recurse=yes owner=epicodus state=directory
  become: yes

- name: set epicodus permission for /Library/Caches/Homebrew
  file: path=/Library/Caches/Homebrew owner=epicodus recurse=yes state=directory
  become: yes

- name: copy profiles
  copy: src={{ item }} dest=/Users/epicodus/{{ item }}
  with_items:
    - "{{ setup_profiles }}"

- name: install profiles
  shell: profiles -I -F /Users/epicodus/{{ item }}
  become: yes
  with_items:
    - "{{ setup_profiles }}"

- name: remove profiles
  file: path=/Users/epicodus/{{ item }} state=absent
  with_items:
    - "{{ setup_profiles }}"

# STUDENTS
- name: set epicodus permission for /System/Library/User Template
  file: path="/System/Library/User Template" owner=epicodus recurse=yes
  become: yes
  when: "'students' in group_names"

- name: copy Guest profiles
  copy: src={{ item }} dest=/Users/epicodus/{{ item }}
  with_items:
    - "{{ setup_guest_account }}"
  when: "'students' in group_names"

- name: install Guest profiles
  shell: profiles -I -F /Users/epicodus/{{ item }}
  become: yes
  with_items:
    - "{{ setup_guest_account }}"
  when: "'students' in group_names"

- name: remove Guest profiles
  file: path=/Users/epicodus/{{ item }} state=absent
  with_items:
    - "{{ setup_guest_account }}"
  when: "'students' in group_names"

- name: copy dock profile for Guest
  copy: src=student_dock.mobileconfig dest=/Users/epicodus/student_dock.mobileconfig
  when: "'students' in group_names"

- name: install dock profile for Guest
  shell: profiles -I -F /Users/epicodus/student_dock.mobileconfig
  become: yes
  when: "'students' in group_names"

# - name: copy Windows dock profile for Guest
#   copy: src=student_windows_dock.mobileconfig dest=/Users/epicodus/student_windows_dock.mobileconfig
#   when: "'students' in group_names"
#
# - name: install Windows dock profile for Guest
#   shell: profiles -I -F /Users/epicodus/student_windows_dock.mobileconfig
#   become: yes
#   when: "'students' in group_names"
#
# - name: remove Windows dock profile for Guest
#   file: path=/Users/epicodus/student_windows_dock.mobileconfig state=absent
#   when: "'students' in group_names"

- name: remove dock profile for Guest
  file: path=/Users/epicodus/student_dock.mobileconfig state=absent
  when: "'students' in group_names"

- name: copy Terminal preferences plist for Guest
  copy: src=com.apple.Terminal.plist dest="{{ guest_path }}/Library/Preferences/com.apple.Terminal.plist"
  become: yes
  when: "'students' in group_names"
# STUDENTS

# STAFF
- name: set epicodus permission for staff home directory
  file: path="{{ staff_path }}" owner=epicodus recurse=yes
  become: yes
  when: "'staff' in group_names"

- name: copy dock profile for staff
  copy: src=staff_dock.mobileconfig dest=/Users/epicodus/staff_dock.mobileconfig
  when: "'staff' in group_names"

- name: install dock profile for staff
  shell: profiles -I -F /Users/epicodus/staff_dock.mobileconfig
  become: yes
  when: "'staff' in group_names"

- name: remove dock profile for staff
  file: path=/Users/epicodus/staff_dock.mobileconfig state=absent
  when: "'staff' in group_names"

- name: copy Terminal preferences plist for staff
  copy: src=com.apple.Terminal.plist dest="{{ staff_path }}/Library/Preferences/com.apple.Terminal.plist"
  become: yes
  when: "'staff' in group_names"

- name: hide epicodus account
  shell: defaults write /Library/Preferences/com.apple.loginwindow HiddenUsersList -array-add epicodus
  become: yes
  when: "'staff' in group_names"

- name: show other users section on login page
  shell: defaults write /Library/Preferences/com.apple.loginwindow SHOWOTHERUSERS_MANAGED -bool TRUE
  become: yes
  when: "'staff' in group_names"

- name: enable fast user switching
  shell: defaults write /Library/Preferences/.GlobalPreferences MultipleSessionEnabled -bool YES
  become: yes
  when: "'staff' in group_names"
# STAFF
